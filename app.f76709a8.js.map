{"version":3,"sources":["webpack:///./src/App.js","webpack:///./src/index.js"],"names":["AssemblyHighlighter","props","language","style","docco","showLineNumbers","code","SnippetPage","state","fetchCode","bind","fileAddr","this","match","params","name","fetch","then","codeTextPromise","text","setState","render","history","Component","HomePageHeadBar","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","SnippetPageHeadBar","returnToHome","push","pathname","IconButton","size","edge","color","aria-label","mr","onClick","Home","console","log","content","map","e","to","address","dataset","path","App","document","querySelector"],"mappings":"kQA4BMA,EAAsB,SAACC,GAE3B,OACE,kBAAC,IAAD,CAAmBC,SAAS,SAASC,MAAOC,IAAOC,iBAAe,GAC/DJ,EAAMK,OAKPC,E,YACJ,WAAYN,GAAO,aACjB,cAAMA,IAAN,MACKO,MAAQ,CACXF,KAAM,cAER,EAAKG,UAAY,EAAKA,UAAUC,KAAf,gBALA,E,4CASnBD,UAAA,WAAY,WAKNE,EAAW,OAASC,KAAKX,MAAMY,MAAMC,OAAOC,KAAO,OAEvDC,MAAML,GAAUM,MAAK,SAAAC,GACnBA,EAAgBC,OAAOF,MAAK,SAAAE,GAAI,OAC9B,EAAKC,SAAS,CAACd,KAAMa,W,EAK3BE,OAAA,WAKE,MAJwB,eAApBT,KAAKJ,MAAMF,MACbM,KAAKH,YAIL,6BACE,kBAAC,EAAD,CAAoBM,KAAMH,KAAKX,MAAMY,MAAMC,OAAOC,KAAMO,QAASV,KAAKX,MAAMqB,UAC5E,kBAAC,EAAD,CAAqBhB,KAAMM,KAAKJ,MAAMF,S,GAhCpBiB,aAsCpBC,E,YACJ,WAAYvB,GAAO,OACjB,YAAMA,IADW,K,oCAInBoB,OAAA,WACE,OACE,kBAACI,EAAA,EAAD,CAAKC,GAAI,CAACC,SAAU,IAClB,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMP,GAAI,CAACC,SAAU,IAAxD,yB,GAVkBJ,a,EA+ChB,kBAAC,IAAD,MA3BRW,E,YACJ,WAAYjC,GAAO,aACjB,cAAMA,IAAN,MACKkC,aAAe,EAAKA,aAAazB,KAAlB,gBAFH,E,4CAKnByB,aAAA,WACEvB,KAAKX,MAAMqB,QAAQc,KAAK,CACtBC,SAAU,O,EAIdhB,OAAA,WACE,IAAIN,EAAOH,KAAKX,MAAMc,KAEtB,OACE,kBAACU,EAAA,EAAD,CAAKC,GAAI,CAACC,SAAU,IAClB,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,QACLC,MAAM,UACNC,aAAW,OACXhB,GAAI,CAACiB,GAAI,GACTC,QAAShC,KAAKuB,cANhB,GAWA,kBAACJ,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMP,GAAI,CAACC,SAAU,IACrDZ,O,GA/BkBQ,a,EAkDzB,kBAAC,EAAD,MAVFsB,E,YACJ,WAAY5C,GAAO,OACjB,YAAMA,IADW,K,oCAInBoB,OAAA,WAGE,OAFAyB,QAAQC,IAAI,OACZD,QAAQC,IAAInC,KAAKX,MAAMqB,SAErB,+BAEE,6BACE,4BACG0B,EAAQC,KAAI,SAAAC,GACX,OACE,4BACE,kBAAC,IAAD,CAAMC,GAAI,CACRd,SAAU,IAAMa,EAAEE,QAClB5C,MAAO,CACL4C,QAASF,EAAEE,QACXrC,KAAMmC,EAAEnC,KACRsC,QAAS,cAETH,EAAEnC,c,GAvBLQ,a,EAqEH,kBAAC,IAAD,CAAO+B,KAAM,SAAUrB,UAAW1B,I,EAIxC,kBAAC,IAAD,CAAO+C,KAAK,IAAIrB,UAAWY,IAOtBU,E,YAhCb,WAAYtD,GAAO,OACjB,YAAMA,IADW,K,oCAQnBoB,OAAA,WAOE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAEI2B,EAAQC,KAAI,SAAAC,GACV,YAHN,K,GAlBU3B,aC/KlBF,iBAAO,kBAAC,EAAD,MAAQmC,SAASC,cAAc,U","file":"app.f76709a8.js","sourcesContent":["import './App.css'\r\n\r\nimport React, {Component} from 'react'\r\nimport content from './content.json'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\n//注意如果你用ws的自动补全的话，style会从一个错误的文件夹引入；一定检查auto import和文档能不能对的上\r\nimport {docco} from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  Icon,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemButton, ListItemIcon,\r\n  ListItemText,\r\n  Toolbar,\r\n  Typography\r\n} from \"@mui/material\";\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport List from '@mui/material/List';\r\n\r\nconst AssemblyHighlighter = (props) => {\r\n  const codeString = 'let var =3';\r\n  return (\r\n    <SyntaxHighlighter language=\"x86asm\" style={docco} showLineNumbers>\r\n      {props.code}\r\n    </SyntaxHighlighter>\r\n  );\r\n};\r\n\r\nclass SnippetPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      code: \"Loading...\"\r\n    }\r\n    this.fetchCode = this.fetchCode.bind(this);\r\n  }\r\n\r\n  //这个函数的内容不能写进render()里面，会导致无限重新渲染\r\n  fetchCode() {\r\n    //一开始和之前jp-learn的project一样，这个page依赖于上一个page的传参。在Electron里面没问题，但web里用户需要能\r\n    //直接进入这个page，如果直接从浏览器输地址，这些传参都会undefined。\r\n    //因此方法是用URL parameter传id过来，用this.props.match.params收，然后再hashmap lookup。\r\n    //用react router时参数dot嵌套比较复杂，多console.log(this.props)\r\n    let fileAddr = \"asm/\" + this.props.match.params.name + \".asm\";\r\n\r\n    fetch(fileAddr).then(codeTextPromise => {\r\n      codeTextPromise.text().then(text =>\r\n        this.setState({code: text})\r\n      )\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.code === \"Loading...\") {\r\n      this.fetchCode();\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <SnippetPageHeadBar name={this.props.match.params.name} history={this.props.history}/>\r\n        <AssemblyHighlighter code={this.state.code}></AssemblyHighlighter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass HomePageHeadBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box sx={{flexGrow: 1}}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{flexGrow: 1}}>\r\n              Assembly Snippets\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nclass SnippetPageHeadBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.returnToHome = this.returnToHome.bind(this);\r\n  }\r\n\r\n  returnToHome() {\r\n    this.props.history.push({\r\n      pathname: \"/\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let name = this.props.name;\r\n\r\n    return (\r\n      <Box sx={{flexGrow: 1}}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"home\"\r\n              sx={{mr: 2}}\r\n              onClick={this.returnToHome}\r\n            >\r\n              <HomeIcon>\r\n              </HomeIcon>\r\n            </IconButton>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{flexGrow: 1}}>\r\n              {name}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    console.log(\"his\");\r\n    console.log(this.props.history);\r\n    return (\r\n      <div>\r\n        <HomePageHeadBar></HomePageHeadBar>\r\n        <div>\r\n          <ul>\r\n            {content.map(e => {\r\n              return (\r\n                <li>\r\n                  <Link to={{\r\n                    pathname: \"/\" + e.address,\r\n                    state: {//这个’state‘也可以叫其他名字，也可以传多个param，接收端统一即可\r\n                      address: e.address,\r\n                      name: e.name,\r\n                      dataset: 'data.csv'\r\n                    }\r\n                  }}>{e.name}</Link>\r\n\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n\r\n        {/*<Box sx={{width: '100%', maxWidth: 360, bgcolor: 'background.paper'}}>*/}\r\n        {/*  <nav aria-label=\"main mailbox folders\">*/}\r\n\r\n        {/*    <List>*/}\r\n        {/*      <ListItem>*/}\r\n        {/*        <ListItemText primary={\"Inbox\"}/>*/}\r\n        {/*      </ListItem>*/}\r\n        {/*    </List>*/}\r\n        {/*  </nav>*/}\r\n        {/*</Box>*/}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Import的直接就是json了，不需要再parse\r\n    //this.info = JSON.parse(content);\r\n  }\r\n\r\n  //原因不明，但要是想在子组件中用this.props.history来在代码中跳转url的话，不能按照他们的example<Route><Component</R>\r\n  //这样写，一定要将Component作为Route的子组件，三种方法见router的api文档。\r\n  render() {\r\n    //If you put a file into the public folder, it will not be processed by webpack. Instead it will be copied into the build folder untouched. To reference assets in the public folder, you need to use an environment variable called PUBLIC_URL.\r\n    // fetch 是 slower, target at public dir and for dynamical, while import is fast, src dir and static.\r\n    const codeString = '(num) => num + 1';\r\n\r\n    //Router的switch中不能将根路径赋给自己，不然页面会死循环；要将Home拆出来\r\n    //在App里面定义的Route是可以在下级部件（还是全局？）使用的，不用重新定义\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          {\r\n            content.map(e => {\r\n              return (\r\n                <Route path={\"/:name\"} component={SnippetPage}/>\r\n              )\r\n            })\r\n          }\r\n          <Route path=\"/\" component={Home}/>\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import './index.css'\n\nimport React from 'react'\nimport {render} from 'react-dom'\n\nimport App from './App'\n\nrender(<App/>, document.querySelector('#app'))\n"],"sourceRoot":""}